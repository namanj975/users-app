let connectDb,task,getUsers,initialProcess,express,configuration,appRoutes;_f1b‍.w("./db/connection",[["connectDb",["connectDb"],function(v){connectDb=v}]]);_f1b‍.w("./task",[["default",["task"],function(v){task=v}],["getUsers",["getUsers"],function(v){getUsers=v}]]);_f1b‍.w("./initialProcessHandler",[["default",["initialProcess"],function(v){initialProcess=v}]]);_f1b‍.w("express",[["default",["express"],function(v){express=v}]]);_f1b‍.w("./appConfig.js",[["default",["configuration"],function(v){configuration=v}]]);_f1b‍.w("./routes/index",[["default",["appRoutes"],function(v){appRoutes=v}]]);/*
 * @Author: naman jain(namanj975@gmail.com) 
 * @Date: 2021-12-28 18:46:13 
 * @Last Modified by: naman jain(namanj975@gmail.com)
 * @Last Modified time: 2021-12-30 19:03:52
 */








const app = express()
app.set('appPort', configuration.port);

app.all('/', (req, res) => {
    _f1b‍.g.console.log("this withot mount called",req.method);
    res.send('Hello World!')
})

app.listen(app.get('appPort'), (val) => {
    console.log(`Example app listening at http://localhost:${app.get('appPort')}`);
})

let initiateProcess = async () => {
    try {
        connectDb().then((result) => { _f1b‍.g.console.log("db result", result); }).catch(err => _f1b‍.g.console.log(err));
        await initialProcess();
    }catch(err){
        _f1b‍.g.console.log("error occured while initiating the main process",err);
    }
}


function errorHandler(err, req, res, next) {
    if (res.headersSent) {   //If any error encountered after response headers has been sent then express default error handler deal with it.
        return next(err)
    }
    _f1b‍.g.console.log("error occured in the app", err);
    res.status(500)
    res.render('error', { error: err })
}
app.use(errorHandler)
app.use("/api/v1",appRoutes);
process.on("unhandledRejection", (reason, promise) => {
    _f1b‍.g.console.log("unhandled promise rejection has been caught", reason);
});

process.on('uncaughtException', function (err) {
    _f1b‍.g.console.error("Exceptions has been caught", err);
})

initiateProcess();